{"ast":null,"code":"var _jsxFileName = \"/home/user/backend/api-beauty/client/src/components/Context.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext();\nexport default function ShopContextProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [products, setProducts] = useState([]);\n  const [category, setCategory] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [id, setId] = useState(0);\n  const [cart, setCart] = useState([]);\n  const [addCartInfo, setAddCartInfo] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"\");\n\n  const loadProducts = array => setProducts([...array]);\n\n  const productsByCategory = string => setCategory(\"\" + string);\n\n  const productsByBrand = str => setBrand(\"\" + str);\n\n  const productsId = number => setId(0 + number);\n\n  const addToCart = (property, item, value) => {\n    value === \"select number\" || value === \"\" ? setAddCartInfo(\"You need to choose number of items\") : setAddCartInfo(\" Item added to cart\");\n    cart[cart.indexOf(item)].quantity = value;\n    setCart([...cart, item]);\n  };\n\n  console.log(\"context\", products);\n  console.log(category);\n  console.log(brand);\n  console.log(\"ID\", id);\n  console.log(\"CART\", cart);\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: {\n      products,\n      category,\n      brand,\n      id,\n      cart,\n      addCartInfo,\n      quantity,\n      loadProducts,\n      productsByCategory,\n      productsByBrand,\n      productsId,\n      addToCart,\n      setCart,\n      setQuantity\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShopContextProvider, \"pr4/taZvoXJq0dXkArTOgMjKobc=\");\n\n_c = ShopContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"sources":["/home/user/backend/api-beauty/client/src/components/Context.jsx"],"names":["React","createContext","useState","ShopContext","ShopContextProvider","children","products","setProducts","category","setCategory","brand","setBrand","id","setId","cart","setCart","addCartInfo","setAddCartInfo","quantity","setQuantity","loadProducts","array","productsByCategory","string","productsByBrand","str","productsId","number","addToCart","property","item","value","indexOf","console","log"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,EAAjC;AAEP,eAAe,SAASG,mBAAT,OAA2C;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACxD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,EAAD,EAAKC,KAAL,IAAcX,QAAQ,CAAC,CAAD,CAA5B;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;;AAGA,QAAMkB,YAAY,GAAIC,KAAD,IAAWd,WAAW,CAAC,CAAC,GAAGc,KAAJ,CAAD,CAA3C;;AACA,QAAMC,kBAAkB,GAAIC,MAAD,IAAYd,WAAW,CAAC,KAAKc,MAAN,CAAlD;;AACA,QAAMC,eAAe,GAAIC,GAAD,IAASd,QAAQ,CAAC,KAAKc,GAAN,CAAzC;;AACA,QAAMC,UAAU,GAAIC,MAAD,IAAYd,KAAK,CAAC,IAAIc,MAAL,CAApC;;AACA,QAAMC,SAAS,GAAG,CAACC,QAAD,EAAWC,IAAX,EAAiBC,KAAjB,KAA2B;AAE3CA,IAAAA,KAAK,KAAK,eAAV,IAA6BA,KAAK,KAAK,EAAvC,GAA4Cd,cAAc,CAAC,oCAAD,CAA1D,GAAmGA,cAAc,CAAC,qBAAD,CAAjH;AACAH,IAAAA,IAAI,CAACA,IAAI,CAACkB,OAAL,CAAaF,IAAb,CAAD,CAAJ,CAAyBZ,QAAzB,GAAoCa,KAApC;AACAhB,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUgB,IAAV,CAAD,CAAP;AACD,GALD;;AAOAG,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB5B,QAAvB;AACA2B,EAAAA,OAAO,CAACC,GAAR,CAAY1B,QAAZ;AACAyB,EAAAA,OAAO,CAACC,GAAR,CAAYxB,KAAZ;AACAuB,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBtB,EAAlB;AACAqB,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBpB,IAApB;AAEA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLR,MAAAA,QADK;AAELE,MAAAA,QAFK;AAGLE,MAAAA,KAHK;AAILE,MAAAA,EAJK;AAKLE,MAAAA,IALK;AAMLE,MAAAA,WANK;AAOLE,MAAAA,QAPK;AAQLE,MAAAA,YARK;AASLE,MAAAA,kBATK;AAULE,MAAAA,eAVK;AAWLE,MAAAA,UAXK;AAYLE,MAAAA,SAZK;AAaLb,MAAAA,OAbK;AAcLI,MAAAA;AAdK,KADT;AAAA,cAkBGd;AAlBH;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAjDuBD,mB;;KAAAA,mB","sourcesContent":["import { React, createContext, useState } from \"react\";\n\nexport const ShopContext = createContext();\n\nexport default function ShopContextProvider({ children }) {\n  const [products, setProducts] = useState([]);\n  const [category, setCategory] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [id, setId] = useState(0);\n  const [cart, setCart] = useState([]);\n  const [addCartInfo, setAddCartInfo] = useState(\"\")\n  const [quantity, setQuantity] = useState(\"\");\n\n\n  const loadProducts = (array) => setProducts([...array]);\n  const productsByCategory = (string) => setCategory(\"\" + string);\n  const productsByBrand = (str) => setBrand(\"\" + str);\n  const productsId = (number) => setId(0 + number);\n  const addToCart = (property, item, value) => {\n    \n    value === \"select number\" || value === \"\" ? setAddCartInfo(\"You need to choose number of items\") : setAddCartInfo(\" Item added to cart\")\n    cart[cart.indexOf(item)].quantity = value; \n    setCart([...cart, item]);\n  };\n\n  console.log(\"context\", products);\n  console.log(category);\n  console.log(brand);\n  console.log(\"ID\", id);\n  console.log(\"CART\", cart);\n\n  return (\n    <ShopContext.Provider\n      value={{\n        products,\n        category,\n        brand,\n        id,\n        cart,\n        addCartInfo,\n        quantity,\n        loadProducts,\n        productsByCategory,\n        productsByBrand,\n        productsId,\n        addToCart,\n        setCart,\n        setQuantity\n      }}\n    >\n      {children}\n    </ShopContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}