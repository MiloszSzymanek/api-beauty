{"ast":null,"code":"var _jsxFileName = \"/home/user/backend/api-beauty/client/src/components/Header/Brands.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { ShopContext } from \"../Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Brands(props) {\n  _s();\n\n  const {\n    products,\n    productsByBrand,\n    brand\n  } = useContext(ShopContext);\n  const [brandArr, setBrandArr] = useState([]);\n  useEffect(() => {\n    const newArr = [...brandArr];\n\n    for (let i = 0; i < products.length; i++) {\n      if (!newArr.includes(products[i].product_type)) {\n        newArr.push(products[i].product_type);\n      }\n\n      setBrandArr([...newArr]);\n    }\n  }, [props.brandDrop]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: props.bDrop ? \"brandsShow\" : \"brands\",\n    style: props.styling,\n    children: brandArr.map(i => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"brand\",\n      onClick: () => productsByBrand(i),\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        exact: true,\n        className: \"brandLink\",\n        activeClassName: \"activeBrandLink\",\n        to: \"/OneBrand\",\n        onClick: () => props.setBDrop(false),\n        children: i\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Brands, \"MU32X1xMJw23aYZ3DxMuG6d5Feg=\");\n\n_c = Brands;\n\nvar _c;\n\n$RefreshReg$(_c, \"Brands\");","map":{"version":3,"sources":["/home/user/backend/api-beauty/client/src/components/Header/Brands.jsx"],"names":["React","useContext","useEffect","useState","NavLink","ShopContext","Brands","props","products","productsByBrand","brand","brandArr","setBrandArr","newArr","i","length","includes","product_type","push","brandDrop","bDrop","styling","map","setBDrop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,WAAT,QAA4B,YAA5B;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACpC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,eAAZ;AAA6BC,IAAAA;AAA7B,MAAuCT,UAAU,CAACI,WAAD,CAAvD;AAEA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMW,MAAM,GAAG,CAAC,GAAGF,QAAJ,CAAf;;AAEA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,QAAQ,CAACO,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AAC1C,UAAI,CAACD,MAAM,CAACG,QAAP,CAAgBR,QAAQ,CAACM,CAAD,CAAR,CAAYG,YAA5B,CAAL,EAAgD;AAC9CJ,QAAAA,MAAM,CAACK,IAAP,CAAYV,QAAQ,CAACM,CAAD,CAAR,CAAYG,YAAxB;AACD;;AACDL,MAAAA,WAAW,CAAC,CAAC,GAAGC,MAAJ,CAAD,CAAX;AACD;AAEA,GAXQ,EAWN,CAACN,KAAK,CAACY,SAAP,CAXM,CAAT;AAgBA,sBACE;AAAI,IAAA,SAAS,EAAEZ,KAAK,CAACa,KAAN,GAAc,YAAd,GAA6B,QAA5C;AAAuD,IAAA,KAAK,EAAEb,KAAK,CAACc,OAApE;AAAA,cACGV,QAAQ,CAACW,GAAT,CAAaR,CAAC,iBACb;AAAI,MAAA,SAAS,EAAC,OAAd;AAAsB,MAAA,OAAO,EAAE,MAAML,eAAe,CAACK,CAAD,CAApD;AAAA,6BACE,QAAC,OAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,SAAS,EAAC,WAFZ;AAGE,QAAA,eAAe,EAAC,iBAHlB;AAIE,QAAA,EAAE,EAAC,WAJL;AAKE,QAAA,OAAO,EAAE,MAAMP,KAAK,CAACgB,QAAN,CAAe,KAAf,CALjB;AAAA,kBAMET;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GArCuBR,M;;KAAAA,M","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { ShopContext } from \"../Context\";\n\nexport default function Brands(props) {\n  const { products, productsByBrand, brand } = useContext(ShopContext);\n\n  const [brandArr, setBrandArr] = useState([])\n\n  useEffect(() => {\n\n    const newArr = [...brandArr]\n\n    for (let i = 0; i < products.length; i++) {\n    if (!newArr.includes(products[i].product_type)) {\n      newArr.push(products[i].product_type);\n    }\n    setBrandArr([...newArr])\n  }\n\n  }, [props.brandDrop] )\n  \n\n  \n\n  return (\n    <ul className={props.bDrop ? \"brandsShow\" : \"brands\" } style={props.styling}>\n      {brandArr.map(i => (\n        <li className=\"brand\" onClick={() => productsByBrand(i) }> \n          <NavLink\n            exact\n            className=\"brandLink\"\n            activeClassName=\"activeBrandLink\"\n            to=\"/OneBrand\"\n            onClick={() => props.setBDrop(false)}\n          >{i}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}