{"ast":null,"code":"var _jsxFileName = \"/home/user/backend/api-beauty/client/src/components/Context.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext();\nexport default function ShopContextProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [products, setProducts] = useState([]);\n  const [category, setCategory] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [id, setId] = useState(0);\n  const [cart, setCart] = useState([]);\n\n  const loadProducts = array => setProducts([...array]);\n\n  const productsByCategory = string => setCategory(\"\" + string);\n\n  const productsByBrand = str => setBrand(\"\" + str);\n\n  const productsId = number => setId(0 + number);\n\n  const addToCart = item => {\n    setCart([...cart, item]);\n  };\n\n  console.log(\"context\", products);\n  console.log(category);\n  console.log(brand);\n  console.log(\"ID\", id);\n  console.log(\"CART\", cart);\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: {\n      products,\n      category,\n      brand,\n      id,\n      cart,\n      loadProducts,\n      productsByCategory,\n      productsByBrand,\n      productsId,\n      addToCart,\n      setCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShopContextProvider, \"YUNSvq0ApC5gl8Sr2nov6mRffqE=\");\n\n_c = ShopContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"sources":["/home/user/backend/api-beauty/client/src/components/Context.jsx"],"names":["React","createContext","useState","ShopContext","ShopContextProvider","children","products","setProducts","category","setCategory","brand","setBrand","id","setId","cart","setCart","loadProducts","array","productsByCategory","string","productsByBrand","str","productsId","number","addToCart","item","console","log"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,EAAjC;AAEP,eAAe,SAASG,mBAAT,OAA2C;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACxD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,EAAD,EAAKC,KAAL,IAAcX,QAAQ,CAAC,CAAD,CAA5B;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMc,YAAY,GAAIC,KAAD,IAAWV,WAAW,CAAC,CAAC,GAAGU,KAAJ,CAAD,CAA3C;;AACA,QAAMC,kBAAkB,GAAIC,MAAD,IAAYV,WAAW,CAAC,KAAKU,MAAN,CAAlD;;AACA,QAAMC,eAAe,GAAIC,GAAD,IAASV,QAAQ,CAAC,KAAKU,GAAN,CAAzC;;AACA,QAAMC,UAAU,GAAIC,MAAD,IAAYV,KAAK,CAAC,IAAIU,MAAL,CAApC;;AACA,QAAMC,SAAS,GAAIC,IAAD,IAAU;AAC1BV,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUW,IAAV,CAAD,CAAP;AACD,GAFD;;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBrB,QAAvB;AACAoB,EAAAA,OAAO,CAACC,GAAR,CAAYnB,QAAZ;AACAkB,EAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBf,EAAlB;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBb,IAApB;AAEA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLR,MAAAA,QADK;AAELE,MAAAA,QAFK;AAGLE,MAAAA,KAHK;AAILE,MAAAA,EAJK;AAKLE,MAAAA,IALK;AAMLE,MAAAA,YANK;AAOLE,MAAAA,kBAPK;AAQLE,MAAAA,eARK;AASLE,MAAAA,UATK;AAULE,MAAAA,SAVK;AAWLT,MAAAA;AAXK,KADT;AAAA,cAeGV;AAfH;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAxCuBD,mB;;KAAAA,mB","sourcesContent":["import { React, createContext, useState } from \"react\";\n\nexport const ShopContext = createContext();\n\nexport default function ShopContextProvider({ children }) {\n  const [products, setProducts] = useState([]);\n  const [category, setCategory] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [id, setId] = useState(0);\n  const [cart, setCart] = useState([]);\n\n  const loadProducts = (array) => setProducts([...array]);\n  const productsByCategory = (string) => setCategory(\"\" + string);\n  const productsByBrand = (str) => setBrand(\"\" + str);\n  const productsId = (number) => setId(0 + number);\n  const addToCart = (item) => {\n    setCart([...cart, item]);\n  };\n\n  console.log(\"context\", products);\n  console.log(category);\n  console.log(brand);\n  console.log(\"ID\", id);\n  console.log(\"CART\", cart);\n\n  return (\n    <ShopContext.Provider\n      value={{\n        products,\n        category,\n        brand,\n        id,\n        cart,\n        loadProducts,\n        productsByCategory,\n        productsByBrand,\n        productsId,\n        addToCart,\n        setCart,\n      }}\n    >\n      {children}\n    </ShopContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}